<?php

require('./secrets.php');
require('./auth.php');



// adatbÃ¡zis kapcsolat lÃ©trehozÃ¡sa
$pdo = new PDO('mysql:host=localhost;dbname=' . $secrets['mysqlDb'], $secrets['mysqlUser'], $secrets['mysqlPass']);
$pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION); // Hiba dobÃ¡sa, ha valami elromlik

// HTTP metÃ³dus beolvasÃ¡sa
$method = $_SERVER['REQUEST_METHOD'];


//                                      POST 

if ($method == 'POST') {
    //  POST esetÃ©n, azaz Ãºj esemÃ©ny lÃ©trehozÃ¡sÃ¡nÃ¡l beolvaszuk a kliens Ã¡ltal kÃ¼ldÃ¶tt JSON adatokat
    $data = json_decode(file_get_contents('php://input'));

    // EllenÅ‘rizzÃ¼k, hogy a kÃ¶telezÅ‘ mezÅ‘k (title, occurrence) meg vannak-e adva
    if (!isset($data->title) || !isset($data->occurrence)) {
        http_response_code(400); // 400 Bad Request hiba
        die(json_encode(["error" => "Title Ã©s Occurrence kÃ¶telezÅ‘!"]));
    }

    // Az esemÃ©nyt beszÃºrjuk az adatbÃ¡zisba (user_id egyelÅ‘re fix Ã©rtÃ©k, ezt kÃ©sÅ‘bb JWT-vel kezeljÃ¼k)
    $stmt = $pdo->prepare('INSERT INTO events (user_id, title, occurrence, description) VALUES (?, ?, ?, ?)');
    $stmt->execute([1, $data->title, $data->occurrence, $data->description ?? null]);

    // VisszakÃ¼ldjÃ¼k a sikeres vÃ¡lasz JSON formÃ¡tumban
    header('Content-Type: application/json');
    echo json_encode(["message" => "EsemÃ©ny sikeresen lÃ©trehozva!"]);
    return;
}


//                              GET

if ($method == 'GET') {
    // ğŸ“Œ FelhasznÃ¡lÃ³ sajÃ¡t esemÃ©nyeinek listÃ¡zÃ¡sa

    // LekÃ©rdezzÃ¼k az adott felhasznÃ¡lÃ³hoz tartozÃ³ esemÃ©nyeket
    $stmt = $pdo->prepare('SELECT * FROM events WHERE user_id = ?');
    $stmt->execute([1]); // A kÃ©sÅ‘bbiekben ezt JWT tokenbÅ‘l kell kiolvasni

    // Az esemÃ©nyeket JSON formÃ¡tumban visszakÃ¼ldjÃ¼k a kliensnek
    $events = $stmt->fetchAll(PDO::FETCH_ASSOC);
    echo json_encode($events);
    return;
}


//                                                         PATCH
//                                            EsemÃ©ny leÃ­rÃ¡sÃ¡nak frissÃ­tÃ©se

if ($method == 'PATCH') {
    header('Content-Type: application/json');
    
    // EllenÅ‘rizzÃ¼k, hogy van-e ID a kÃ©rÃ©sben
    if (!isset($_GET['id'])) {
        http_response_code(400);
        die(json_encode(["error" => "HiÃ¡nyzÃ³ esemÃ©ny ID!"]));
    }

    $eventId = $_GET['id'];

    // Beolvaszuk a kliens Ã¡ltal kÃ¼ldÃ¶tt JSON adatokat
    $data = json_decode(file_get_contents('php://input'));

    // EllenÅ‘rizzÃ¼k, hogy van-e description mezÅ‘
    if (!isset($data->description)) {
        http_response_code(400);
        die(json_encode(["error" => "HiÃ¡nyzÃ³ description mezÅ‘!"]));
    }

    // FrissÃ­tjÃ¼k az esemÃ©ny leÃ­rÃ¡sÃ¡t az adatbÃ¡zisban
    $stmt = $pdo->prepare('UPDATE events SET description = ? WHERE id = ? AND user_id = ?');
    $stmt->execute([$data->description, $eventId, 1]); // JWT utÃ¡n a user_id dinamikus lesz

    // Ha nem tÃ¶rtÃ©nt frissÃ­tÃ©s (pl. rossz ID vagy mÃ¡s user esemÃ©nye)
    if ($stmt->rowCount() == 0) {
        http_response_code(403);
        die(json_encode(["error" => "Nem mÃ³dosÃ­thatÃ³ az esemÃ©ny!"]));
    }

    echo json_encode(["message" => "EsemÃ©ny frissÃ­tve!"]);
    return;
}




//                                          DELETE
//                                    EsemÃ©ny tÃ¶rlÃ©se

if ($method == 'DELETE') {
    header('Content-Type: application/json');

    // EllenÅ‘rizzÃ¼k, hogy van-e ID a kÃ©rÃ©sben
    if (!isset($_GET['id'])) {
        http_response_code(400);
        die(json_encode(["error" => "HiÃ¡nyzÃ³ esemÃ©ny ID!"]));
    }

    $eventId = $_GET['id'];

    // TÃ¶rÃ¶ljÃ¼k az esemÃ©nyt, de csak ha az adott user hozta lÃ©tre
    $stmt = $pdo->prepare('DELETE FROM events WHERE id = ? AND user_id = ?');
    $stmt->execute([$eventId, 1]); // JWT utÃ¡n a user_id dinamikus lesz

    // Ha nem tÃ¶rtÃ©nt tÃ¶rlÃ©s (pl. rossz ID vagy mÃ¡s user esemÃ©nye)
    if ($stmt->rowCount() == 0) {
        http_response_code(403);
        die(json_encode(["error" => "Nem tÃ¶rÃ¶lhetÅ‘ az esemÃ©ny!"]));
    }

    echo json_encode(["message" => "EsemÃ©ny tÃ¶rÃ¶lve!"]);
    return;
}

