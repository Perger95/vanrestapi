<?php

require('./secrets.php');
require('./vendor/autoload.php'); // betÃ¶ltjÃ¼k a JWT kÃ¶nyvtÃ¡rat

use Firebase\JWT\JWT;

// ğŸ“Œ GET kÃ©rÃ©s esetÃ©n, listÃ¡zza az Ã¶sszes felhasznÃ¡lÃ³t (tesztelÃ©shez!)
if ($_SERVER['REQUEST_METHOD'] == 'GET') {
    $stmt = $pdo->prepare('SELECT * FROM users');
    $stmt->execute();
    $data = $stmt->fetchAll(PDO::FETCH_ASSOC);
    echo json_encode($data);
    return;
}

// ğŸ“Œ POST kÃ©rÃ©s esetÃ©n, megnÃ©zi, hogy bejelentkezÃ©srÅ‘l vagy regisztrÃ¡ciÃ³rÃ³l van-e szÃ³
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $data = json_decode(file_get_contents('php://input'));

    // ğŸ“Œ bejelentkezÃ©s (`POST /users=login`)
    if ($_GET['users'] ?? '' === 'login') {
        $stmt = $pdo->prepare('SELECT id FROM users WHERE email = ? AND password = ?');
        $stmt->execute([$data->email, hash('sha256', $data->password)]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if (!$user) {
            http_response_code(401);
            die(json_encode(["error" => "Incorrect email or password!"]));
        }

        // ğŸ“Œ token generÃ¡lÃ¡s
        $payload = [
            "user_id" => $user['id'],
            "exp" => time() + (60 * 60) // Token lejÃ¡rati idÅ‘: 1 Ã³ra
        ];
        $token = JWT::encode($payload, $secrets['jwt_secret'], 'HS256');

        echo json_encode(["token" => $token]);
        return;
    }

    // ğŸ“Œ RegisztrÃ¡ciÃ³ (`POST /users=register`)
    if ($_GET['users'] ?? '' === 'register') {
        if (!isset($data->email) || !isset($data->password)) {
            http_response_code(400);
            die(json_encode(["error" => "Email and password are required!"]));
        }

        // EllenÅ‘rizzÃ¼k, hogy mÃ¡r lÃ©tezik-e a felhasznÃ¡lÃ³
        $stmt = $pdo->prepare('SELECT id FROM users WHERE email = ?');
        $stmt->execute([$data->email]);
        if ($stmt->fetch()) {
            http_response_code(400);
            die(json_encode(["error" => "This Email is already used by someone!"]));
        }

        // ğŸ“Œ JelszÃ³ SHA-256 hash-elÃ©se
        $hashedPassword = hash('sha256', $data->password);

        // Ãšj felhasznÃ¡lÃ³ mentÃ©se
        $stmt = $pdo->prepare('INSERT INTO users (email, password) VALUES (?, ?)');
        $stmt->execute([$data->email, $hashedPassword]);

        echo json_encode(["message" => "You have successfully registered!"]);
        return;
    }
}
